[buildout]
parts =
    plone
    zope2
    productdistros
    instance
    test
    test-coverage
    coverage-report
    zopepy
    omelette

# Add additional egg download sources here. dist.plone.org contains archives
# of Plone packages.
find-links =
    http://dist.plone.org
    http://download.zope.org/ppix/
    http://download.zope.org/distribution/
    http://effbot.org/downloads

# Add additional eggs here
# elementtree is required by Plone
eggs =
    elementtree
    plone.mocktestcase
    collective.contacts

# Reference any eggs you are developing here, one per line
# e.g.: develop = src/my.package
develop =
    src/collective.contacts

versions = versions

# Pin versions to make sure our environment is repeteable
# bin/buildout -Novvvvv |sed -ne 's/^Picked: //p' | sort | uniq
[versions]
elementtree = 1.2.7-20070827-preview
plone.recipe.distros = 1.3
plone.recipe.plone = 3.1.7
plone.recipe.zope2install = 2.6
plone.recipe.zope2instance = 2.8
python-openid = 2.2.1
setuptools = 0.6c9
zc.recipe.egg = 1.1.0
zc.recipe.testrunner = 1.0.0
z3c.coverage = 1.1.1


[plone]
recipe = plone.recipe.plone


[zope2]
recipe = plone.recipe.zope2install
url = ${plone:zope2-url}


# Use this section to download additional old-style products.
# List any number of URLs for product tarballs under URLs (separate
# with whitespace, or break over several lines, with subsequent lines
# indented). If any archives contain several products inside a top-level
# directory, list the archive file name (i.e. the last part of the URL,
# normally with a .tar.gz suffix or similar) under 'nested-packages'.
# If any archives extract to a product directory with a version suffix, list
# the archive name under 'version-suffix-packages'.
[productdistros]
recipe = plone.recipe.distros
urls =
nested-packages =
version-suffix-packages =


[instance]
recipe = plone.recipe.zope2instance
zope2-location = ${zope2:location}
user = admin:admin
http-address = 12500
debug-mode = on
verbose-security = on

# If you want Zope to know about any additional eggs, list them here.
# This should include any development eggs you listed in develop-eggs above,
# e.g. eggs = ${buildout:eggs} ${plone:eggs} my.package
eggs =
    ${buildout:eggs}
    ${plone:eggs}

# If you want to register ZCML slugs for any packages, list them here.
# e.g. zcml = my.package my.other.package
zcml =
    collective.contacts

products =
    ${buildout:directory}/products
    ${productdistros:location}
    ${plone:products}


[test]
recipe = collective.recipe.z2testrunner
defaults = --ndiff -v
zope2part = instance
packages = collective.contacts


[test-coverage]
recipe = collective.recipe.z2testrunner
packages = ${test:packages}
zope2part = instance
defaults = --ndiff -v --coverage=${buildout:directory}/coverage


[coverage-report]
recipe = zc.recipe.egg
eggs = z3c.coverage
scripts = coverage=coverage-report
arguments = ('${buildout:directory}/coverage', '${buildout:directory}/coverage/report')


[zopepy]
recipe = zc.recipe.egg
eggs = ${instance:eggs}
interpreter = zopepy
extra-paths = ${zope2:location}/lib/python
scripts = zopepy


[omelette]
recipe = collective.recipe.omelette
eggs = ${instance:eggs}
products = ${instance:products}
packages = ${zope2:location}/lib/python ./
